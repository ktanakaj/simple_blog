---
- hosts: default
  vars:
    timezone: "Asia/Tokyo"
    home_dir: /home/vagrant
    remi_repository: http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
    remi_repository_name: remi-php71
    app_apache_conf_src: "{{ home_dir }}/sync/apache-app.conf"
    app_apache_conf_dest: /etc/httpd/conf.d/simple_blog.conf
    app_db_name: simple_blog
    app_db_user: simple_blog
    app_db_password: simple_blog01
    app_db_sql: "{{ home_dir }}/sync/app/simple_blog.sql"
  tasks:
    - block:
      - block:
        - name: Check timezone
          shell: timedatectl | grep -e {{ timezone }}
          register: timedatectl_timezone
          always_run: yes
          changed_when: false
          failed_when: false
        - name: Set timezone
          shell: timedatectl set-timezone {{ timezone }}
          when: timedatectl_timezone.stdout == ""
      - block:
        - name: Install Remi repository
          yum: name={{ remi_repository }}
        - name: Install the latest version of yum-utils
          yum: name=yum-utils state=latest
        - name: Check PHP version
          shell: yum info php | grep -e "Version\s*:\s*7\."
          register: php_version
          always_run: yes
          changed_when: false
          failed_when: false
        - name: Enable Remi repository
          shell: yum-config-manager --enable "{{ remi_repository_name }}"
          when: php_version.stdout == ""
        - name: Upgrade all packages
          yum: name=* state=latest
      - block:
        - name: Install the latest version of PHP7
          yum: name=php state=latest
        - name: Install the latest version of php-pdo
          yum: name=php-pdo state=latest
        - name: Install the latest version of php-mysqlnd
          yum: name=php-mysqlnd state=latest
        - name: Install the latest version of php-mbstring
          yum: name=php-mbstring state=latest
        - name: Install the latest version of Apache
          yum: name=httpd state=latest
        - name: Install the latest version of MariaDB
          yum: name=mariadb state=latest
        - name: Install the latest version of MariaDB server
          yum: name=mariadb-server state=latest
        - name: Install the latest version of MySQL-python
          yum: name=MySQL-python state=latest
      - block:
        - name: Action to enable service mariadb
          service: name=mariadb state=started enabled=yes
        - name: Copy the web app configuration to nginx
          copy: src={{ app_apache_conf_src }} dest={{ app_apache_conf_dest }} force=no
        - name: Action to enable service Apache
          service: name=httpd state=restarted enabled=yes
      - block:
        - name: Action to disable SELinux for Apache
          selinux: state=permissive policy=targeted
        - name: Action to enable service firewalld
          service: name=firewalld state=started enabled=yes
        - name: Open port for HTTP
          firewalld: service=http permanent=true state=enabled
        - name: Open port for MariaDB only internal zone
          firewalld: service=mysql permanent=true state=enabled zone=internal
        - name: Set private ip addresses to internal zone
          firewalld: source='172.16.0.0/12' zone=internal state=enabled
        - name: Action to reload service firewalld
          service: name=firewalld state=reloaded enabled=yes
        - name: Chmod vagrant's home directory for Apache
          file: path={{ home_dir }} mode=0755
      - block:
        - name: Create the web application database
          mysql_db: name={{ app_db_name }} encoding=utf8 state=present
          register: app_db_created
        - name: Craete the web application db user
          mysql_user: name={{ app_db_user }} password={{ app_db_password }} host=localhost priv={{ app_db_name }}.*:ALL state=present
        - name: Craete the web application db user for remote access
          mysql_user: name={{ app_db_user }} password={{ app_db_password }} host=% priv={{ app_db_name }}.*:ALL state=present
        - name: Craete the web application db schema
          shell: mysql --user={{ app_db_user }} --password={{ app_db_password }} {{ app_db_name }} -e 'source {{ app_db_sql }}' -B
          when: app_db_created.changed == true
      become: true
